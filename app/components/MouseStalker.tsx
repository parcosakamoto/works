"use client";
import { useEffect, useState } from "react";
import styles from "styles/MouseStalker.module.scss";

// マウスストーカーのメインコンポーネント
export default function MouseStalker() {
  const [position, setPosition] = useState({ x: 0, y: 0 });
  const [isVisible, setIsVisible] = useState(false);
  const [scale, setScale] = useState(1);

  useEffect(() => {
    // モバイル・タブレットでは無効化
    if (window.matchMedia("(hover: none)").matches) return;

    const handleMouseMove = (e: MouseEvent) => {
      if (isVisible) {
        setPosition({
          x: e.clientX,
          y: e.clientY,
        });
      }
    };

    const handleMouseEnter = () => {
      setIsVisible(true);
      setScale(2);
    };

    const handleMouseLeave = () => {
      setIsVisible(false);
      setScale(1);
    };

    const hoverAreas = document.querySelectorAll(".hoverarea");

    document.addEventListener("mousemove", handleMouseMove);
    hoverAreas.forEach((hoverArea) => {
      hoverArea.addEventListener("mouseenter", handleMouseEnter);
      hoverArea.addEventListener("mouseleave", handleMouseLeave);
    });

    return () => {
      document.removeEventListener("mousemove", handleMouseMove);
      hoverAreas.forEach((hoverArea) => {
        hoverArea.removeEventListener("mouseenter", handleMouseEnter);
        hoverArea.removeEventListener("mouseleave", handleMouseLeave);
      });
    };
  }, [isVisible]);

  return (
    <div
      className={`${styles.stalker} ${
        isVisible ? styles.visible : styles.hidden
      }`}
      style={{
        transform: `translate(${position.x}px, ${position.y}px) scale(${scale})`,
      }}
    >
      <svg
        width="60"
        height="60"
        viewBox="0 0 60 60"
        fill="none"
        className={styles.swipeText}
      >
        <g clipPath="url(#clip0_4064_464)">
          <path
            d="M12.11 32.849C12.187 32.7732 12.264 32.7407 12.3575 32.7407C12.451 32.7407 12.5445 32.784 12.6325 32.849C13.1274 33.2116 13.7874 33.4118 14.3703 33.4118C15.1732 33.4118 15.9267 33.0167 15.9267 32.1833C15.9267 30.473 12.0935 31.3173 12.0935 28.8169C12.0935 27.7236 13.0009 27.0146 14.3263 27.0146C15.1293 27.0146 15.8332 27.242 16.2952 27.545C16.3721 27.5883 16.4161 27.6966 16.4161 27.8048C16.4161 27.8968 16.3996 27.9726 16.3392 28.0321C16.2622 28.1241 16.1687 28.1674 16.0642 28.1674C15.9872 28.1674 15.8937 28.135 15.8167 28.0917C15.3987 27.8481 14.9093 27.7128 14.3373 27.7128C13.4739 27.7128 12.9349 28.2107 12.9349 28.8061C12.9349 30.6083 16.7681 29.7586 16.7681 32.1562C16.7681 33.5038 15.5967 34.11 14.2713 34.11C13.4409 34.11 12.6105 33.8231 12.099 33.3523C12.0385 33.2928 11.989 33.2007 11.989 33.1087C11.989 33.0167 12.022 32.9247 12.099 32.849H12.11Z"
            fill="black"
          />
          <path
            d="M27.0137 27.4257C27.0742 27.2417 27.2117 27.1226 27.3987 27.1226C27.6462 27.1226 27.7837 27.3066 27.7837 27.5015C27.7837 27.5447 27.7837 27.5772 27.7672 27.6205L25.7653 33.7254C25.6884 33.9527 25.5509 34.061 25.3364 34.061C25.1219 34.061 25.0119 33.969 24.9184 33.7417L23.1036 29.1034C22.9936 28.8166 22.8891 28.5298 22.7956 28.2375C22.7021 28.5568 22.6086 28.8437 22.4876 29.1467L20.7333 33.7254C20.6398 33.969 20.5188 34.061 20.3043 34.061C20.1338 34.061 19.9798 33.9527 19.9028 33.7254L17.8405 27.6638C17.824 27.6205 17.824 27.5718 17.824 27.5285C17.824 27.3174 17.978 27.1172 18.242 27.1172C18.473 27.1172 18.5829 27.2687 18.6269 27.4203L20.1063 31.9232C20.2163 32.2696 20.2933 32.5889 20.3978 32.9244C20.5078 32.5889 20.5958 32.2858 20.7388 31.9232L22.3996 27.4203C22.4601 27.2525 22.5866 27.1172 22.8286 27.1172C23.0706 27.1172 23.2136 27.2525 23.2741 27.4203L24.9679 31.9069C25.0889 32.2425 25.1989 32.5889 25.3199 32.9353C25.4134 32.5564 25.5344 32.21 25.6444 31.8312L27.0137 27.4203V27.4257Z"
            fill="black"
          />
          <path
            d="M30.1265 25.0608C29.8185 25.0608 29.5545 24.8497 29.5545 24.4979C29.5545 24.1948 29.8185 24 30.1265 24C30.3905 24 30.6489 24.1948 30.6489 24.4979C30.6489 24.8443 30.385 25.0608 30.1265 25.0608ZM30.495 33.6553C30.495 33.8664 30.3245 34.0341 30.0935 34.0341C29.8625 34.0341 29.692 33.8664 29.692 33.6553V27.5017C29.692 27.2906 29.8625 27.1228 30.11 27.1228C30.3245 27.1228 30.495 27.2906 30.495 27.5017V33.6553Z"
            fill="black"
          />
          <path
            d="M34.1137 36.6207C34.1137 36.8318 33.9432 36.9996 33.7122 36.9996C33.4812 36.9996 33.3107 36.8318 33.3107 36.6207V27.5012C33.3107 27.2901 33.4812 27.1224 33.7287 27.1224C33.9432 27.1224 34.1137 27.2901 34.1137 27.5012V28.0641C34.6361 27.4579 35.6535 27.0195 36.6545 27.0195C38.6563 27.0195 39.8882 28.4429 39.8882 30.4617C39.8882 32.4804 38.4858 34.1149 36.33 34.1149C35.4831 34.1149 34.6801 33.9471 34.1137 33.5412V36.6315V36.6207ZM34.1137 32.7456C34.8396 33.2165 35.5325 33.368 36.2695 33.368C37.9468 33.368 39.0413 32.1719 39.0413 30.505C39.0413 28.838 38.1008 27.761 36.44 27.761C35.4721 27.761 34.5591 28.2589 34.1137 28.8218V32.7456Z"
            fill="black"
          />
          <path
            d="M47.989 30.4243C47.989 30.5758 47.8185 30.7274 47.6645 30.7274H42.242C42.3025 32.3619 43.4134 33.3631 45.0742 33.3631C45.8772 33.3631 46.4601 33.1196 46.9551 32.7732C47.0156 32.7299 47.0926 32.6974 47.1696 32.6974C47.2796 32.6974 47.384 32.7407 47.4775 32.849C47.5215 32.9085 47.5545 32.9843 47.5545 33.06C47.5545 33.152 47.5105 33.244 47.4445 33.3036C46.7846 33.8177 45.8442 34.1046 45.0247 34.1046C42.8359 34.1046 41.3456 32.7082 41.3456 30.5596C41.3456 28.5734 42.5774 27.0146 44.8543 27.0146C46.6416 27.0146 47.9945 28.227 47.9945 30.0888C47.9945 30.2078 47.9945 30.3161 47.978 30.4243H47.989ZM44.7828 27.7561C43.2429 27.7561 42.3355 28.7411 42.198 30.0725H47.1861C47.1531 28.6329 46.2291 27.7561 44.7828 27.7561Z"
            fill="black"
          />
        </g>
        <defs>
          <clipPath id="clip0_4064_464">
            <rect
              width="36"
              height="13"
              fill="white"
              transform="translate(12 24)"
            />
          </clipPath>
        </defs>
      </svg>
    </div>
  );
}
